@using System.Data;
@using System.Data.OleDb;
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>@ViewBag.Title</title>
    <link href="@Url.Content("~/Content/Site.css")" rel="stylesheet" type="text/css" />
    @*<script src="@Url.Content("~/Scripts/jquery-1.5.1.min.js")" type="text/javascript"></script>*@
    @*<script src="@Url.Content("~/Scripts/modernizr-1.7.min.js")" type="text/javascript"></script>*@
    <script src="@Url.Content("~/Scripts/jquery.js")" type="text/javascript"></script>
    @*<script src="@Url.Content("~/Scripts/jquery.autocomplete.min.js")" type="text/javascript"></script>*@
    <script src="@Url.Content("~/Scripts/jquery-ui.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.nicescroll.js")" type="text/javascript"></script>
    <link href="@Url.Content("~/Content/themes/base/jquery-ui.css")"
        rel="stylesheet" type="text/css" />
    <link href='http://fonts.googleapis.com/css?family=Arvo|Open+Sans:300|Grand+Hotel|Abril+Fatface|Ubuntu'
        rel='stylesheet' type='text/css'>
    @********CATEGORY MENU STYLE*******@
    <link href="@Url.Content("~/Content/CategoryMenu/Mobile/CategoryMenuMobileStyle.css")" rel="stylesheet" type="text/css"/>
    <script type="text/javascript">
        //arulv1

        function openPriceCompare(ctrl) {
            var product = $(ctrl).attr("product-name");
            var imgURL = $(ctrl).attr("product-url");
            var imgStr = imgURL;

            $.ajax({
                async: true,
                cache: false,
                type: "GET",
                url: "@(Url.Action("PriceCompare", "Trade"))",
                data: { Product: product, imageURL: imgURL },
                success: function (data) {

                    $("#priceComparisonDiv").html(data);
                    $("#priceComparisonDiv").dialog({
                        modal: true,
                        title: 'Price Comparison',
                        width: "95%",
                        height: "auto",
                        dialogClass: "myDialogClass",
                        closeText: "X"
                    });


                }
            });


        }

        function showMenu() {

            $(".retailermenu").toggle();
        }
        $(document).ready(

     function () {
         $(window).scroll(function (e) {
             $el = $('.fixedElement');
             if ($(this).scrollTop() > 200 && $el.css('position') != 'fixed') {
                 $('.fixedElement').css({ 'position': 'fixed', 'top': '0px' });
             }
             if ($(this).scrollTop() < 200 && $el.css('position') == 'fixed') {
                 $('.fixedElement').css({ 'position': 'static', 'top': '0px' });
             }
         });


         $("[data-role='Qty']").keydown(function (e) {
             if (e.keyCode == 13) {
                 AddToShoppingList(this);
                 return;
             }
             // Allow: backspace, delete, tab, escape and enter
             if ($.inArray(e.keyCode, [46, 8, 9, 27, 13]) !== -1 ||
                 // Allow: Ctrl+A
                 (e.keyCode == 65 && e.ctrlKey === true) ||
                 // Allow: home, end, left, right
                 (e.keyCode >= 35 && e.keyCode <= 39)) {
                 // let it happen, don't do anything
                 return;
             }
             // Ensure that it is a number and stop the keypress
             if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                 e.preventDefault();
             }
         });

         $("html").niceScroll();
         page = 1;
         totalpages = '';
         setpagecount();
         busy = false;
         $(window).scroll(function () {
             if (Math.abs($(window).scrollTop() - ($(document).height() - $(window).height())) < 5) {
                 var test = Number(totalpages);
                 if (totalpages > page && busy == false) {
                     busy = true;
                     page = page + 1;
                     //debugger;
                     $("#divloading").css("display", "block");
                     $.ajax({
                         cache: false,
                         async: false,
                         type: "POST",
                         url: "@(Url.Action("Searchresult", "Trade"))",
                         data: { "query": $("#query").val(), "cashandcarry": $('.selectedretailmenu').children("input:first")[0].value, "browser": "", pageindex: page },

                         success: function (data) {
                             busy = false;

                             //debugger;
                             $('#searchresult').append(data);
                             $("html").getNiceScroll().resize();
                             $("#divloading").css("display", "none");

                         },
                         error: function (xhr, ajaxOptions, thrownError) {

                             if (xhr.status == 401) {
                                 window.location.href = "@(Url.Action("TradeLogin", "Trade"))";
                     }
                     }
                     });
         }

     }
         });


     }

);

//$("[data-role='Qty']").keyup(function(e)
//{
//debugger;
//var intsOnly = /^\d+$/,
//    stri = $('#empcontact').val();
//if(intsOnly.test(stri)) {
//  return false;  
//}
//return true;
//});

function getCategoryProducts(ctrl) {
    $(".topmenu").toggle();
    var category = $(ctrl).attr("category-name");
    //getresult(category, null, 'partial');
    window.location = "@(Url.Action("Searchresult", "Trade"))" + "?browser=full&query=" + category;
}
function showCategoryMenu() {
    $(".topmenu").toggle();
}


function checkNumeric(stri) {
    var intsOnly = /^\d+$/,
           t = 1;
    if (!intsOnly.test(stri)) {
        return false;
    }
    return true;
}






$(function () {

    $("#query").autocomplete({
        source: function (request, response) {

            var customer = new Array();
            $.ajax({
                async: false,
                cache: false,
                type: "POST",
                url: "@(Url.Action("Autocomplete", "Trade"))",
                data: {
                    "term"
                    : request.term
                },
                success: function (data) {
                    // debugger;

                    for (var i = 0; i < data.length ; i++) {
                        customer[i] = { label: data[i].Value, Id: data[i].Key };
                    }
                }
            });
            response(customer);
        },
        select: function (event, ui) {
            //fill selected customer details on form

            //getresult(ui.item.label,null,'partial');
        },
        error: function (xhr, ajaxOptions, thrownError) {
            //debugger;
            if (xhr.status == 401) {
                window.location.href = "@(Url.Action("TradeLogin", "Trade"))";
            }
        }
    });
});

function getresult(val, cashcarry, browser) {
    $("#loading").css("display", "block");
    $("#searchresult").css({ opacity: 0.3 });

    $.ajax({
        cache: false,
        async: true,
        type: "POST",
        url: "@(Url.Action("Searchresult", "Trade"))",
        data: { "query": val, "cashandcarry": cashcarry, "browser": browser },

        success: function (data) {
            page = 1;

            if (browser != null) {
                $('#tradebody').html(data);
            }
            else {
                $('#searchresult').html(data);
            }


            $("#loading").css("display", "none");
            $("#searchresult").css({ opacity: 1 });
            $("html").getNiceScroll().resize();
        },
        error: function (xhr, ajaxOptions, thrownError) {
            if (xhr.status == 401) {
                window.location.href = "@(Url.Action("TradeLogin", "Trade"))";
            }
            }
    });

}

function shoppingAddKeyDown(shopAddBtn) {

    shopAddBtn.text = 'Adding...';
}



//arulv1
function AddToShoppingList(button) {
    var divmain = $(button).parents("div .shadow").first();
    var Qty = $(divmain).find("[data-role='Qty']").val();
    if (Qty != "") {
        //$(divmain).find("[data-role='loading']").show();
        var volume = $(divmain).find("[data-role='volume']").val();
        var shopid = $(divmain).find("[data-role='shopid']").val();
        var vat = $(divmain).find("[data-role='vat']").val();
        var offerrate = $(divmain).find("[data-role='offerrate']").val();
        var product = $(divmain).find("[data-role='product']").text().trim();
        $.ajax({
            cache: false,
            async: false,
            type: "POST",
            url: "@(Url.Action("AddToShoppingList", "Trade"))",
                 data: { "UserId": "IdealMall", "Shop_ID": shopid, "Offer_Rate": offerrate, "Product": product, "Qty": Qty, "VAT": vat, "Volume": volume },

                 success: function (data) {

                     if (data == "Session Time out") {
                         window.location.href = "@(Url.Action("TradeLogin", "Trade"))";
                    }
                    else {
                        $(divmain).find("[data-role='loading']").hide();
                        button.text = "Add to Shopping";
                        $("#shoppinglistcount").animate({
                            'font-size': "+11px"
                        });

                        $("#shoppinglistcount").text("(" + data + ")");
                        alert(Qty + " Qty added to Shopping list");
                        $(divmain).find("[data-role='Qty']").removeClass("required");
                    }

                    $(divmain).find("[data-role='Qty']").val("");
                },
                 error: function (xhr, ajaxOptions, thrownError) {
                     if (xhr.status == 401) {
                         window.location.href = "@(Url.Action("TradeLogin", "Trade"))";
                    }
                }
             });
        }
        else {
            $(divmain).find("[data-role='Qty']").addClass("required");
        }

    }
    </script>
    <script type="text/javascript">        !function (d, s, id) { var js, fjs = d.getElementsByTagName(s)[0], p = /^http:/.test(d.location) ? 'http' : 'https'; if (!d.getElementById(id)) { js = d.createElement(s); js.id = id; js.src = p + '://platform.twitter.com/widgets.js'; fjs.parentNode.insertBefore(js, fjs); } }(document, 'script', 'twitter-wjs');</script>
    <style>
        input:focus
        {
            border-radius: 10px;
        }
    </style>
</head>
<body style="background-color: #e5e5e5;">
    <div style="background-color: rgb(253,89,37); top: 0; width: 100%; color: White;">
        <table width="100%">
            <tr>
                <td style="width: 60%">
                    <img src="../../../../images/logoMobile.png" alt="Ideal Mall" width="60%" style="text-align: center; padding-top: 13px" />
                </td>
                <td width="40%" align="right">
                    <table>
                        <tr>
                            <td align="right">
                                <span class="button_go" onclick="window.location.href=this.children[0].href" style="text-indent: 0px; width: 113px; text-decoration: none; font-size: 11px; color: white; height: 17px; font-weight: bold; padding: 2px;">
                                    @Html.ActionLink("Sign Out", "TradeLogin", "Trade", null, new { @style = "color:white;text-decoration:none" })
                                </span>
                            </td>
                        </tr>
                        <tr style="height: 2px;">
                        </tr>
                        <tr>
                            <td align="right">
                                <span onclick="window.location.href = this.children[0].href" class="button_go" style="text-indent: 0px; width: 113px; text-decoration: none; font-size: 11px; color: white; height: 17px; font-weight: bold; padding: 2px;">@Html.ActionLink("Shopping List", "Index", "TradeShopping", null, new { @style = "color:white;text-decoration:none" })
                                    <span id="shoppinglistcount" style="color: white;">(@ViewBag.ShoppingCount)</span>
                                </span>
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>
        </table>
        <div style="position: absolute; top: 5px">
            <span style="float: left;" onclick="showMenu()">
                <img id="Menu" src="/images/Menu.png" alt="Menu" /></span>

        </div>
    </div>



    <br />

    <div class="" style="text-align: center;">
        <form  method="get" action="@(Url.Action("Searchresult", "Trade"))" class="formcontrol ">
            <div class="searchcontrol">
                <span class="search-bar-icon"></span>
                <input type="text" id="query" name="query" class="searchtextbox" value="@ViewBag.searchtext" size="60" placeholder="Get the best Offer Products" autofocus="true" style="border-color:rgb(193,0,0);width:210px" />
                <input type="submit" value="Search" class="button_go" />
                <input type="hidden" name="browser" value="full" />
            </div>
        </form>
    </div>

    @{
        DataSet DtSet = null;
        int tableCount = 0;
        int table1RowCount = 0;
        int table2RowCount = 0;
        string currDepartment = string.Empty;
        string oldDepartment = string.Empty;
        string currCategory = string.Empty;
        string oldCategory = string.Empty;
        try
        {
            OleDbConnection MyConnection = null;

            OleDbDataAdapter MyCommand;
            // need to pass relative path after deploying on server
            string excelPath = System.IO.Path.GetFullPath(Server.MapPath("~/Content/CategoryMenu/MenuProducts.xls"));

            /* connection string  to work with excel file. HDR=Yes - indicates 
                   that the first row contains columnnames, not data. HDR=No - indicates 
                   the opposite. "IMEX=1;" tells the driver to always read "intermixed" 
                   (numbers, dates, strings etc) data columns as text. 
                Note that this option might affect excel sheet write access negative. */

            if (Path.GetExtension(excelPath) == ".xls")
            {
                MyConnection = new OleDbConnection("Provider=Microsoft.Jet.OLEDB.4.0;Data Source=" + excelPath + ";Extended Properties=\"Excel 8.0;HDR=Yes;IMEX=2\"");
            }
            else if (Path.GetExtension(excelPath) == ".xlsx")
            {
                MyConnection = new OleDbConnection(@"Provider=Microsoft.ACE.OLEDB.12.0;Data Source=" + excelPath + ";Extended Properties='Excel 12.0;HDR=YES;IMEX=1;';");
            }


            //MyConnection = new OleDbConnection("provider=Microsoft.Jet.OLEDB.4.0;Data Source='c:\\csharp.net-informations.xls';Extended Properties=Excel 8.0;");
            MyCommand = new OleDbDataAdapter("select * from [Department1$]", MyConnection);
            //MyCommand.TableMappings.Add("Table1", "TestTable1");
            DtSet = new System.Data.DataSet();
            MyCommand.Fill(DtSet, "Department1");

            MyCommand = new OleDbDataAdapter("select * from [Department2$]", MyConnection);
            //MyCommand.TableMappings.Add("Table2", "TestTable2");
            MyCommand.Fill(DtSet, "Department2");

            tableCount = DtSet.Tables.Count;
            if (tableCount > 0)
            {
                if (DtSet.Tables[0].Rows != null)
                {
                    table1RowCount = DtSet.Tables[0].Rows.Count;
                }
                if (tableCount > 1)
                {
                    if (DtSet.Tables[1].Rows != null)
                    {
                        table2RowCount = DtSet.Tables[1].Rows.Count;
                    }
                }
            }
            MyConnection.Close();
        }
        catch (Exception ex)
        {
        }
        <div>
            <nav id="nav" role="navigation">
                <a href="#nav" title="Show navigation">Show navigation</a> <a href="#" title="Hide navigation">Hide navigation</a>
                <ul class="">
                    @*<input class="switchbox" id="css3menu-switcher1" type="checkbox"><label class="switch"
                    onclick="" for="css3menu-switcher1" ></label>*@
                    @if (table1RowCount > 0)
                    {
                        for (int i = 0; i < table1RowCount; i++)
                        {
                            currDepartment = DtSet.Tables[0].Rows[i][0].ToString();
                            if (currDepartment != oldDepartment)
                            {
                                string filter = "Department = '" + currDepartment + "'";
                                DataRow[] result = DtSet.Tables[0].Select(filter);
                                int filterCount = result.Length;
                        <li class="topmenu"><a style="height: 35px; line-height: 35px;" href="#">
                            <img alt="Home" src="@Url.Content("~/Content/CategoryMenu/aqua_1_50.png")"/>@currDepartment</a>
                            <ul style="z-index: 9999!important;">
                                @foreach (DataRow row in result)
                                {
                                    currCategory = row[1].ToString();    
                                    <li><a href="#" category-name="@currCategory" onclick="javascript:getCategoryProducts(this);">
                                        <img alt="Product Info" src="@Url.Content("~/Content/CategoryMenu/SubMenuIcon1.png")"/>@currCategory</a></li>
                                }
                            </ul>

                        </li>
                            }
                            oldDepartment = currDepartment;
                        }
                    }
                    @if (table2RowCount > 0)
                    {
                        for (int i = 0; i < table2RowCount; i++)
                        {
                            currDepartment = DtSet.Tables[1].Rows[i][0].ToString();
                            if (currDepartment != oldDepartment)
                            {
                                string filter = "Department = '" + currDepartment + "'";
                                DataRow[] result = DtSet.Tables[1].Select(filter);
                                int filterCount = result.Length;
                        <li class="topmenu"><a style="height: 35px; line-height: 35px;" href="#">
                            <img alt="Home" src="@Url.Content("~/Content/CategoryMenu/aqua_1_50.png")"/>@currDepartment</a>
                            <ul style="z-index: 9999!important;">
                                @foreach (DataRow row in result)
                                {
                                    currCategory = row[1].ToString();    
                                    <li><a href="#" category-name="@currCategory" onclick="javascript:getCategoryProducts(this);">
                                        <img alt="Product Info" src="@Url.Content("~/Content/CategoryMenu/SubMenuIcon1.png")"/>@currCategory</a></li>
                                }
                            </ul>
                        </li>
                            }
                            oldDepartment = currDepartment;
                        }
                    }
                </ul>
            </nav>
        </div>   
    }


    <div class="aligncenter">
        @RenderBody()
    </div>
    @*//arulv1*@
    <img id="loading" src='/images/loader.gif' style="position: absolute; top: 50%; left: 35%; display: none;" />
    @* //arulv1*@
</body>
</html>
